---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { navBarLinks, identity, socialLinks } from "../config";
import type { SEOInfo } from "../types/config";

interface Props {
  seo: SEOInfo;
}

const { seo } = Astro.props;
---

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById("theme-toggle") as HTMLButtonElement;
  const html = document.documentElement;

  // Check for saved theme preference or default to dark
  const currentTheme = localStorage.getItem("theme") || "dark";
  html.setAttribute("data-theme", currentTheme);

  themeToggle?.addEventListener("click", () => {
    const theme = html.getAttribute("data-theme");
    const newTheme = theme === "dark" ? "light" : "dark";
    html.setAttribute("data-theme", newTheme);
    localStorage.setItem("theme", newTheme);
  });

  // Menu functionality
  const linkMenuButton = document.getElementById("link-menu-button") as HTMLButtonElement;
  const linkMenu = document.getElementById("link-menu") as HTMLDivElement;
  const openIndicator = document.getElementById("open-indicator") as HTMLSpanElement;

  const toggleMenu = (show: boolean) => {
    linkMenu.classList.toggle("pointer-events-none", !show);
    linkMenu.classList.toggle("opacity-0", !show);
    openIndicator.innerText = show ? "-" : "+";
  };

  linkMenuButton.addEventListener("click", () => {
    toggleMenu(linkMenu.classList.contains("opacity-0"));
  });

  document.addEventListener("click", (event) => {
    const target = event.target as Node;
    if (!linkMenuButton.contains(target) && !linkMenu.contains(target)) {
      toggleMenu(false);
    }
  });
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <meta name="generator" content={Astro.generator} />
    <title>{seo.title}</title>
    <meta name="description" content={seo.description} />
    <meta property="og:title" content={seo.title} />
    <meta property="og:description" content={seo.description} />
    <meta property="og:image" content={seo.image} />
    <script is:inline>
      // Prevent flash of unstyled content
      const theme = localStorage.getItem("theme") || "dark";
      document.documentElement.setAttribute("data-theme", theme);
    </script>
    <!-- Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-0KL7Y7MZKN"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-0KL7Y7MZKN');
    </script>
  </head>
  <body>
    <header class="sticky top-0 z-50 backdrop-blur-md bg-primary-transparent border-b border-gray-200 dark:border-gray-800">
      <div class="px-6 py-4 max-w-2xl mx-auto flex items-center justify-between">
        <a href="/" class="flex items-center gap-3 group">
          <Image
            src={identity.logo}
            alt={"Logo"}
            width={42}
            height={42}
            class="w-[42px] h-[42px] object-cover rounded-full ring-2 ring-transparent group-hover:ring-gray-300 dark:group-hover:ring-gray-700 transition-all"
          />
          <span class="hidden sm:block font-semibold opacity-80 group-hover:opacity-100 transition-opacity">{identity.name}</span>
        </a>

        <nav class="ml-auto mr-4 sm:mr-6">
          <ul class="hidden sm:flex sm:items-center sm:gap-1">
            {
              navBarLinks.map((link) => (
                <li>
                  <a
                    class="px-4 py-2 rounded-lg hover:bg-secondary opacity-60 hover:opacity-100 transition-all font-medium text-sm"
                    href={link.url}
                    target={link.external ? "_blank" : "_self"}
                  >
                    {link.title}
                  </a>
                </li>
              ))
            }
          </ul>
          <div class="relative sm:hidden">
            <button
              id="link-menu-button"
              class="px-3 py-2 rounded-lg hover:bg-secondary opacity-60 hover:opacity-100 transition-all font-medium text-sm"
              >Menu <span id="open-indicator">+</span></button
            >
            <div
              id="link-menu"
              class="absolute p-2 right-0 mt-2 bg-primary-solid rounded-xl w-44 shadow-lg border border-gray-200 dark:border-gray-800 transition-opacity ease-in-out duration-300 opacity-0 pointer-events-none z-40"
            >
              <ul>
                {
                  navBarLinks.map((link) => (
                    <li>
                      <a
                        class="block px-4 py-3 rounded-lg hover:bg-secondary transition-all opacity-80 hover:opacity-100"
                        href={link.url}
                        target={link.external ? "_blank" : "_self"}
                      >
                        {link.title}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>
        </nav>

        <div class="flex items-center gap-1">
          <button
            id="theme-toggle"
            class="p-2.5 rounded-lg hover:bg-secondary opacity-60 hover:opacity-100 transition-all"
            aria-label="Toggle theme"
          >
            <Icon name="mdi:theme-light-dark" width={20} height={20} />
          </button>
          <a
            href=`mailto:${identity.email}`
            class="p-2.5 rounded-lg hover:bg-secondary opacity-60 hover:opacity-100 transition-all"
            aria-label="Email"
          >
            <Icon name="mdi:email" width={20} height={20} />
          </a>
        </div>
      </div>
    </header>
    <main class="mb-32">
      <slot />
    </main>
    <footer class="mt-24 border-t border-gray-200 dark:border-gray-800">
      <div class="max-w-2xl mx-auto px-6 py-8">
        <div class="text-center space-y-4">
          <div class="flex justify-center items-center gap-6">
            {socialLinks.map((link) => (
              <a
                href={link.url}
                target={link.external ? "_blank" : "_self"}
                class="opacity-60 hover:opacity-100 transition-opacity"
                aria-label={link.title}
              >
                <Icon name={link.icon} width={22} height={22} />
              </a>
            ))}
          </div>

          <nav class="flex justify-center gap-6">
            {navBarLinks.map((link) => (
              <a
                href={link.url}
                target={link.external ? "_blank" : "_self"}
                class="text-sm opacity-50 hover:opacity-100 transition-opacity"
              >
                {link.title}
              </a>
            ))}
          </nav>

          <p class="text-sm opacity-50">
            Â© {new Date().getFullYear()} {identity.name}. All rights reserved.
          </p>
        </div>
      </div>
    </footer>
  </body>
</html>

<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");

  :root {
    --bg-primary: #ffffff;
    --bg-secondary: #f5f5f5;
    --text-primary: #000000;
    --text-secondary: #666666;
  }

  [data-theme="dark"] {
    --bg-primary: #000000;
    --bg-secondary: #1a1a1a;
    --text-primary: #ffffff;
    --text-secondary: #999999;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
  }

  html {
    font-family: "Inter", sans-serif;
    background: var(--bg-primary);
  }

  body,
  html,
  .bg-secondary {
    transition: background-color 0.3s ease;
  }

  *:not(script):not(style) {
    color: var(--text-primary);
    transition: color 0.3s ease;
  }

  .bg-secondary {
    background-color: var(--bg-secondary);
  }

  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  .hover-underline {
    text-decoration: underline 1px rgba(0, 0, 0, 0);
    text-underline-offset: 5px;
    transition: text-decoration-color 300ms;
  }

  .post:hover .hover-underline {
    text-decoration-color: var(--text-primary);
  }

  .border-gray-200 {
    border-color: #e5e7eb;
  }

  [data-theme="dark"] .dark\:border-gray-800 {
    border-color: #1f2937;
  }

  .bg-primary-transparent {
    background-color: rgba(255, 255, 255, 0.8);
  }

  [data-theme="dark"] .bg-primary-transparent {
    background-color: rgba(0, 0, 0, 0.8);
  }

  .bg-primary-solid {
    background-color: #ffffff;
  }

  [data-theme="dark"] .bg-primary-solid {
    background-color: #000000;
  }

  .ring-gray-300 {
    --tw-ring-color: #d1d5db;
    box-shadow: 0 0 0 2px var(--tw-ring-color);
  }

  [data-theme="dark"] .dark\:group-hover\:ring-gray-700:hover {
    --tw-ring-color: #374151;
  }

  .shadow-lg {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  [data-theme="dark"] .shadow-lg {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.2);
  }
</style>