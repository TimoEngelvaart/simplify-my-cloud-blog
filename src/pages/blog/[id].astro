---
import Layout from "../../layouts/Layout.astro";
import { getCollection, getEntry, render } from "astro:content";
import { Image } from "astro:assets";
import { identity } from "../../config";

// Tell Astro which /blog/:id pages to emit
export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((p) => {
    const clean = p.id.replace(/\.(md|mdx)$/, ""); 
    return { params: { id: clean } };
  });
}

// Runtime for each page:
const { id } = Astro.params;

// Try to resolve by id + extension
const entry =
  (await getEntry("posts", `${id}.md`)) ??
  (await getEntry("posts", `${id}.mdx`));

if (!entry) {
  return Astro.redirect("/blog");
}

const { Content, remarkPluginFrontmatter } = await render(entry);
---

<Layout
  seo={{
    title: entry.data.title,
    description: entry.data.description,
    image: entry.data.image.url,
  }}
>
  <section class="mt-10 max-w-2xl mx-auto px-6">
    <h1 class="font-bold text-3xl mb-4">{entry.data.title}</h1>
    <p class="opacity-60 mb-6">
      {entry.data.description}
    </p>
    <div class="flex gap-4 mb-6">
      <Image
        src={identity.logo}
        alt={identity.name}
        width={40}
        height={40}
        class="w-[40px] aspect-square object-cover rounded-full"
      />
      <div>
        <p class="font-medium">{identity.name}</p>
        <p class="opacity-60">
          {entry.data.pubDate.toLocaleDateString()} Â· {
            remarkPluginFrontmatter.minutesRead
          }
        </p>
      </div>
    </div>
    <Image
      src={entry.data.image.url}
      alt={entry.data.image.alt}
      width={800}
      height={300}
      class="aspect-video w-full rounded-xl mb-10"
    />
    <article
      class="prose prose-invert prose-a:text-blue-300 prose-a:underline-offset-4 prose-headings:mb-2 prose-p:text-[#b3b3b3]"
    >
      <Content />
    </article>
  </section>
</Layout>
